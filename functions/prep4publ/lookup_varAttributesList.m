function varAttributes = lookup_varAttributesList(variableName,varargin)

%%%
% These are the values that the output files are supposed to have according
% to samd standard!
%%%

% Cell array with the following columns:
% 1: variable name (see second column in var2read), 
% 2: standard_name, 
% 3: long_name,
% 4: _FillValue,
% 5: ancilliary_variables
% 6: units
% 7: comment
% 8: precision
% 9: is dimension
% 10: bounds

varAttributes_all = {...
   'variable_name',...
        'standard_name',...
        'long_name',...
        'FillValue',...
        'ancilliary_variables',...
        'units',...
        'comment',...
        'precision',...
        'is_dimension',...
        'bounds';
    %
    'dbz',...
        'equivalent_reflectivity_factor',...
        'equivalent reflectivity factor',...
        '',...
        'radar_flag',...
        'dBZ',...
        'offset applied: xx dBZ',...
        'double',...
        0,...
        '';
    %    
    'ldr',...
        '',...
        'radar linear depolarization ratio',...
        '',...
        'radar_flag',...
        'dB',...
        '',...
        'double',...
        0,...
        '';
    %
    'time',...
        'time',...
        'time',...
        '',...
        '',...
        'seconds since 2020-01-01 00:00:00 UTC',...
        '',...
        'double',...
        1,...
        '';
    %
    'tb',...
        'tb',...
        'TB',...
        '',...
        '',...
        'K',...
        'offset applied: xx',...
        'double',...
        0,...
        '';
    %
    'freq_sb',...
        'frequency',...      % 2: standard_name
       'frequency',...      % 3: long_name,
        '',...      % 4: _FillValue,
       '',...      % 5: ancilliary_variables
        'GHz',...      % 6: units
       '',...      % 7: comment
        'double',...      % 8: precision
        1,...       % 9: is dimension
        '';         % 10: bounds    
    %
    'height',...    % 1: variable name 
        'height',...      % 2: standard_name
        'height above mean sea level',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'm',...      % 6: units
        '',...      % 7: comment
        'double',...      % 8: precision
        1,...       % 9: is dimension
        '';         % 10: bounds    
    %
    'radar_flag',...    % 1: variable name 
        '',...      % 2: standard_name
        'radar data quality flag',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        ' ',...      % 6: units
        '',...      % 7: comment
        'short',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds    
    %
    'lat',...    % 1: variable name 
        'latitude',...      % 2: standard_name
        '',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'deg_north',...      % 6: units
        'aircraft_position',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds       
    %
    'lon',...    % 1: variable name 
        'longitude',...      % 2: standard_name
        '',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'deg_east',...      % 6: units
        'aircraft_position',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds       
    %
    'zsl',...    % 1: variable name 
        'altitude',...      % 2: standard_name
        '',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'm',...      % 6: units
        'aircraft_altitude',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds       
    %
    'turn_flag',...    % 1: variable name 
        '',...      % 2: standard_name
        'flag indicating aircraft_turning',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        '',...      % 6: units
        '',...      % 7: comment
        'single',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds         
    %
    'interpolate_flag',...
        '',...
        'flag indicating interpolation timesteps (1)',...
        '',...
        '',...
        '',...
        '',...
        'double',...
        0,...
        '';
    %
    'sonde_number',...
        '',...
        'sonde number',...
        '',...
        '',...
        '',...
        'none',...
        'double',...
        1,...
        '';
    %
    'dir',...
        'dir',...
        'wdir sondes',...
        '',...
        '',...
        'degree',...
        'none',...
        'double',...
        0,...
        '';
    %
    'wdir',...
        'dir',...
        'wdir sondes',...
        '',...
        '',...
        'degree',...
        'none',...
        'double',...
        0,...
        '';
    %    
    'pa',...
        'pa',...
        'pres sondes',...
        '',...
        '',...
        'hPa',...
        'none',...
        'double',...
        0,...
        '';
    %
    
    'hur',...    % 1: variable name 
        'relative_humidity',...      % 2: standard_name
        'relative humidity',...      % 3: long_name,
        '-999',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        '1',...      % 6: units
        'none',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds     
    %
    
    'wspeed',...    % 1: variable name 
        'wind_speed',...      % 2: standard_name
        'wind speed',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'm/s',...      % 6: units
        'none',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds   
    %
    
    'ta',...    % 1: variable name 
        'air_temperature',...      % 2: standard_name
        'air temperature',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'K',...      % 6: units
        'none',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds    
    %
    
    'base_time',...    % 1: variable name 
        '',...      % 2: standard_name
        'sounding launch time',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'seconds since 2020-01-01 00:00:00 UTC',...      % 6: units
        'none',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds    
    %

    'sonde_time',...    % 1: variable name 
        '',...      % 2: standard_name
        'sonde time',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        'seconds since 2020-01-01 00:00:00 UTC',...      % 6: units
        'none',...      % 7: comment
        'double',...      % 8: precision
        0,...       % 9: is dimension
        '';         % 10: bounds    
    '',...    % 1: variable name 
        '',...      % 2: standard_name
        '',...      % 3: long_name,
        '',...      % 4: _FillValue,
        '',...      % 5: ancilliary_variables
        '',...      % 6: units
        '',...      % 7: comment
        '',...      % 8: precision
        [],...       % 9: is dimension
        '';         % 10: bounds    
    };

%% Extract entries for variable
indInstr = strcmp(varAttributes_all(:,1),variableName);
if nargin==1
    varAttributes = [varAttributes_all(1,:);
                    varAttributes_all(indInstr,:)];
elseif strcmp(varargin{1},'struct')
    varAttributes = cell2struct(varAttributes_all(indInstr,:),varAttributes_all(1,:),2);
end
